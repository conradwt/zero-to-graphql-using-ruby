# https://docs.docker.com/compose/rails/

version: '2.4'

services:
  traefik:
    image: 'traefik:v2.3'

    container_name: 'traefik'

    command:
      #- "--log.level=DEBUG"

      # Traefik will listen on port 8080 by default for API request.
      - '--api.insecure=true'

      # Enabling docker provider
      - '--providers.docker=true'

      # Do not expose containers unless explicitly told so
      - '--providers.docker.exposedbydefault=false'

      # Traefik will listen to incoming request on the port 80 (HTTP)
      - '--entrypoints.web.address=:80'

    ports:
      # The HTTP port
      - '80:80'

      # The Web UI (enabled by --api.insecure=true)
      - '8080:8080'

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  web:
    build:
      context: .
      target: dev

    command: >
      bash -c "
        rm -f tmp/pids/server.pid &&
        bundle exec rails s -b '0.0.0.0'"

    environment:
      - RAILS_ENV=development

    # networks:
    #   - frontend

    volumes:
      - .:/app

    labels:
      # Explicitly tell Traefik to expose this container
      - 'traefik.enable=true'

      # The domain the service will respond to
      - 'traefik.http.routers.web.rule=Host(`web.localhost`)'

      # Allow request only from the predefined entry point named "web"
      - 'traefik.http.routers.web.entrypoints=web'

    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13.0

    volumes:
      - db-data:/var/lib/postgresql/data

    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

    # networks:
    #   - backend

    ports:
      - '5432:5432'

    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1

volumes:
  db-data:
